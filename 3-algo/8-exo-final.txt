Ecrire l’algorithme qui :
-	Ajoute des produits respectant cette structure,
dans un tableau de Produit :

Produit : structure {
		Nom : chaine
		Prix : entier
}
catalogue : tableau de Produit

-	Il faut 4 produits : vélo 120€, Cadre 5€, Chaise 10€, Pull 20€
-	Affiche ces produits en vente en les préfixant par un indice
-	Donner la main à l’utilisateur pour lui demander quel produit il veut acheter : il choisit un produit grâce à son indice. Tant qu’il n’a pas saisi -1, on lui redonne la main pour qu’il puisse choisir d’autres produits (gestion de panier)
-	Quand il a fini il faut afficher le prix total
-	Puis lui donner la main pour qu’il nous dise avec combien d’argent il va payer
-	S’il ne donne pas assez d’argent, on recommence l’étape précédent
- S’il donne pile poil l’argent demandé ou plus, on lui dit merci et on lui rend si nécessaire la monnaie
- créer au moins une fonction et l'utiliser

Variables
	Produit : structure {
		nom : chaine
		prix : entier
	}
	
	velo: Produit
	cadre: Produit
	chaise: Produit
	pull: Produit
	
	catalogue: tableau de Produit
	panier: tableau de Produit
	produitChoisi: Produit
	prod: Produit
	prixTotal: entier
Algo
	// I - création produit
	// V1 sans fonction : création des produits puis insertion dans le catalogue
	velo.nom = "Vélo"
	velo.prix = 120
	ajouter velo dans catalogue
	
	cadre.nom = "Cadre"
	cadre.prix = 5
	ajouter cadre dans catalogue
	
	chaise.nom = "Chaise"
	chaise.prix = 10
	ajouter chaise dans catalogue
	
	pull.nom = "pull"
	pull.prix = 20
	ajouter pull dans catalogue
	
	// V2 avec fonction
	// en deux ligne avec variable intermédiaire
	prod = creerProduit("Vélo", 120)
	ajouter prod dans catalogue
	
	prod = creerProduit("Cadre", 5)
	ajouter prod dans catalogue
	
	// en une ligne
	ajouter creerProduit("Chaise", 10) dans catalogue
	ajouter creerProduit("Pull", 20) dans catalogue
	
	// II - suite
	// affichage des produits depuis le catalogue
	POUR i de 0 à LONGUEUR(catalogue)-1 PAR PAS DE 1
		afficher (i+1) CONCAT catalogue[i].nom CONCAT catalogue[i].prix
		
		// avec une variable intermédiaire
		currentProduct = catalogue[i]
		afficher (i+1) CONCAT currentProduct.nom CONCAT currentProduct.prix
	FIN POUR
	
	// donner la main à l'utilisateur pour remplir son panier
	REPETER
		choix = saisir "Quel produit voulez-vous ajouter à votre panier ? (-1 pour arrêter)"
		SI choix != -1
			// ajouter le produit dans le panier
			produitChoisi = catalogue[choix-1]
			ajouter produitChoisi dans panier
		FIN SI
	TANT QUE choix != -1
	
	// calculer et afficher le prix total
	Afficher "Voici votre panier :"
	prixTotal = 0
	POUR CHAQUE prod DANS panier
		afficher prod.nom CONCAT prod.prix
		prixTotal = prixTotal + prod.prix
	FIN POUR CHAQUE
	
	// lui demander la thune, l'argent, les billets, le flouz
	argent = saisir "C'est l'heure de payer, tu donnes combien ?"
	
	// si pas assez d'argent on recommence l'étape précédente
	TANT QUE argent < prixTotal 
		argent = saisir "C'est pas assez guy, tu donnes combien budy ?"
	FIN 
	
	// si monnaie à rendre
	SI argent > prixTotal
		monnaie = argent - prixTotal
		afficher "Voici votre monnaie : " CONCAT monnaie
	FIN SI
	
	afficher "merci orvoir"
Fin algo

Variables
	newProduct: Produit
Debut fonction creerProduit(name:chaine, price:entier)
	newProduct.nom = name
	newProduct.prix = price
	retourner newProduct
Fin Fonction
	

